(window.webpackJsonp=window.webpackJsonp||[]).push([[156],{473:function(s,n,e){"use strict";e.r(n);var a=e(1),t=Object(a.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"script-setup-是个啥"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#script-setup-是个啥"}},[s._v("#")]),s._v(" script setup 是个啥？")]),s._v(" "),n("p",[s._v("它是 Vue3 的一个新语法糖，在 setup 函数中。所有 ES 模块导出都被认为是暴露给上下文的值，并包含在 setup() 返回对象中。相对于之前的写法，使用后，语法也变得更简单。\n使用方式极其简单，仅需要在 script 标签加上 setup 关键字即可。示例：\n"),n("code",[s._v("<script setup><\/script>")])]),s._v(" "),n("h2",{attrs:{id:"组件自动注册"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#组件自动注册"}},[s._v("#")]),s._v(" 组件自动注册")]),s._v(" "),n("p",[s._v("在 script setup 中，引入的组件可以直接使用，无需再通过components进行注册，并且无法指定当前组件的名字，它会自动以文件名为主，也就是不用再写name属性了。示例：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<template>\n    <Child />\n</template>\n\n<script setup>\nimport Child from './Child.vue'\n<\/script>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("ul",[n("li",[s._v("如果需要定义类似 name 的属性，可以再加个平级的 script 标签，在里面实现即可。")])]),s._v(" "),n("h2",{attrs:{id:"组件核心-api-的使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#组件核心-api-的使用"}},[s._v("#")]),s._v(" 组件核心 API 的使用")]),s._v(" "),n("p",[s._v("使用 props\n通过defineProps指定当前 props 类型，获得上下文的props对象。示例：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<script setup>\n  import { defineProps } from 'vue'\n\n  const props = defineProps({\n    title: String,\n  })\n<\/script>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h2",{attrs:{id:"使用-emits"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用-emits"}},[s._v("#")]),s._v(" 使用 emits")]),s._v(" "),n("p",[s._v("使用defineEmit定义当前组件含有的事件，并通过返回的上下文去执行 emit。示例：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<script setup>\n  import { defineEmits } from 'vue'\n\n  const emit = defineEmits(['change', 'delete'])\n<\/script>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h2",{attrs:{id:"获取-slots-和-attrs"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#获取-slots-和-attrs"}},[s._v("#")]),s._v(" 获取 slots 和 attrs")]),s._v(" "),n("p",[s._v("可以通过useContext从上下文中获取 slots 和 attrs。不过提案在正式通过后，废除了这个语法，被拆分成了useAttrs和useSlots。示例：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 旧\n<script setup>\n  import { useContext } from 'vue'\n\n  const { slots, attrs } = useContext()\n<\/script>\n\n// 新\n<script setup>\n  import { useAttrs, useSlots } from 'vue'\n\n  const attrs = useAttrs()\n  const slots = useSlots()\n<\/script>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("h2",{attrs:{id:"defineexpose-api"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#defineexpose-api"}},[s._v("#")]),s._v(" defineExpose API")]),s._v(" "),n("p",[s._v("传统的写法，我们可以在父组件中，通过 ref 实例的方式去访问子组件的内容，但在 script setup 中，该方法就不能用了，setup 相当于是一个闭包，除了内部的 template模板，谁都不能访问内部的数据和方法。\n如果需要对外暴露 setup 中的数据和方法，需要使用 defineExpose API。示例：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<script setup>\n\timport { defineExpose } from 'vue'\n\tconst a = 1\n\tconst b = 2\n\tdefineExpose({\n\t    a\n\t})\n<\/script>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("属性和方法无需返回，直接使用！\n这可能是带来的较大便利之一，在以往的写法中，定义数据和方法，都需要在结尾 return 出去，才能在模板中使用。在 script setup 中，定义的属性和方法无需返回，可以直接使用！示例：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<template>\n  <div>\n   \t<p>My name is {{name}}</p>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst name = ref('Sam')\n<\/script>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("h2",{attrs:{id:"vue3-defineprops、defineemits、defineexpose-的作用-这几个属性都是在-script-setup-方式时使用。"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vue3-defineprops、defineemits、defineexpose-的作用-这几个属性都是在-script-setup-方式时使用。"}},[s._v("#")]),s._v(" Vue3 defineProps、defineEmits、defineExpose 的作用 这几个属性都是在 script setup 方式时使用。")]),s._v(" "),n("h3",{attrs:{id:"defineprops-组件之间传值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#defineprops-组件之间传值"}},[s._v("#")]),s._v(" defineProps - 组件之间传值")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('// 父组件\n<template>\n  <Child :val="val"></Child>\n</template>\n\n// 子组件\n<script setup>\nimport { defineEmits } from "vue"\nconst props = defineProps({\n  val: {\n    type: String,\n    default: ""\n  }\n})\n<\/script>\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("h3",{attrs:{id:"defineemits-子组件向父组件事件传递"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#defineemits-子组件向父组件事件传递"}},[s._v("#")]),s._v(" defineEmits - 子组件向父组件事件传递")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('// 父组件\n<template>\n <Child  @success="success"></Child>\n</template>\n<script setup>\nfunction success (e) {\n  console.log(e)\n}\n<\/script>\n\n//子组件\n<template>\n <button @click="handleClick">点击按钮</button>\n</template>\n<script setup>\nimport { defineEmits } from "vue"\nconst emits = defineEmits([\'success\'])\nfunction handleClick () {\n  emits("success", "子组件向父组件传递数据")\n}\n<\/script>\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br")])]),n("h3",{attrs:{id:"defineexpose-子组件暴露自己的属性或方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#defineexpose-子组件暴露自己的属性或方法"}},[s._v("#")]),s._v(" defineExpose - 子组件暴露自己的属性或方法")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('// 父组件\n<template>\n  <Child ref="RefChildExpose"></Child>\n  <button @click="touchButton">点击使用子组件</button>\n</template>\n<script setup>\nconst RefChildExpose = ref(null)\nfunction touchButton () {\n  // 使用子组件方法\n  RefChildExpose.value.show()\n  // 输出子组件属性\n  console.log(RefChildExpose.value.count)\n}\n<\/script>\n\n// 子组件\n<script setup>\nimport { defineExpose } from "vue"\nfunction show () {\n  console.log(\'显示\')\n}\ndefineExpose({\n  show,\n  count: 1\n})\n<\/script>\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br")])]),n("h2",{attrs:{id:"vue3-获取dom两种的方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vue3-获取dom两种的方式"}},[s._v("#")]),s._v(" Vue3 获取DOM两种的方式")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<template>\n  <div ref=\"root\">This is a root element</div>\n</template>\n\n<script>\nimport { ref, onMounted, getCurrentInstance } from 'vue';\nexport default {\n\tsetup() {\n\t\tconst { proxy } = getCurrentInstance();\n\t\tconst root = ref(null);\n\n\t\tonMounted(() => {\n\t\t\t// DOM元素将在初始渲染后分配给ref\n\t\t\t//第一种\n\t\t\tconsole.log(root.value); // <div>这是根元素</div>\n\t\t\t//第二种\n\t\t\tconsole.log(proxy.root); // <div>这是根元素</div>\n\t\t});\n\n\t\treturn {\n\t\t\troot,\n\t\t};\n\t},\n};\n<\/script>\n\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<template>\n    <el-form ref=\"formRef\"></el-form>\n    <child-component />\n</template>\n<script setup lang=\"ts\">\nimport ChildComponent from './child.vue'\nimport { getCurrentInstance } from 'vue'\nimport { ElForm } from 'element-plus'\n\n// 方法一，这个变量名和 DOM 上的 ref 属性必须同名，会自动形成绑定\nconst formRef = ref(null)\nconsole.log(formRef.value) // 这就获取到 DOM 了\n\n// 方法二\nconst { proxy } = getCurrentInstance()\nproxy.$refs.formRef.validate((valid) => { ... })\n\n// 方法三，比如在 ts 里，可以直接获取到组件类型\n// 可以这样获取子组件\nconst formRef = ref<InstanceType<typeof ChildComponent>>()\n// 也可以这样 获取 element ui 的组件类型\nconst formRef = ref<InstanceType<typeof ElForm>>()\nformRef.value?.validate((valid) => { ... })\n<\/script>\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br")])]),n("h2",{attrs:{id:"获取-this"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#获取-this"}},[s._v("#")]),s._v(" 获取 this")]),s._v(" "),n("p",[s._v("Vue2 中每个组件里使用 this 都指向当前组件实例，this 上还包含了全局挂载的东西、路由、状态管理等啥啥都有\n而 Vue3 中没有 this，如果想要类似的用法，有两种，一是获取当前组件实例，二是获取全局实例，如下自己可以去打印出来看看")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<script setup>\nimport { getCurrentInstance } from 'vue'\n\n// proxy 就是当前组件实例，可以理解为组件级别的 this，没有全局的、路由、状态管理之类的\nconst { proxy, appContext } = getCurrentInstance()\n\n// 这个 global 就是全局实例\nconst global = appContext.config.globalProperties\n<\/script>\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h2",{attrs:{id:"setup注意要点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#setup注意要点"}},[s._v("#")]),s._v(" setup注意要点")]),s._v(" "),n("p",[s._v("它比"),n("code",[s._v("beforeCreate")]),s._v(" 和"),n("code",[s._v("created")]),s._v(" 这两个生命周期还要快，就是说，"),n("code",[s._v("setup")]),s._v("在 "),n("code",[s._v("beforeCreate,created")]),s._v("前，它里面的this打印出来是"),n("code",[s._v("undefined")]),s._v(" "),n("code",[s._v("setup")]),s._v("可以接受两个参数，第一个参数是"),n("code",[s._v("props")]),s._v(",也就是组件传值，第二个参数是"),n("code",[s._v("context")]),s._v(",上下文对象，context里面还有三个很重要的东西"),n("code",[s._v("attrs，slots,emit，")]),s._v("它们就相当于vue2里面的"),n("code",[s._v("this.$attrs,this.$slots,this.$emit")]),s._v("。")]),s._v(" "),n("h2",{attrs:{id:"ref与reactive的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ref与reactive的区别"}},[s._v("#")]),s._v(" ref与reactive的区别")]),s._v(" "),n("p",[s._v("ref用来定义：基本类型数据。\nref通过Object.defineProperty()的get与set来实现响应式（数据劫持）。\nref定义的数据：操作数据需要.value，读取数据时模板中直接读取不需要.value。\nreactive用来定义：对象或数组类型数据。\nreactive通过使用Proxy来实现响应式（数据劫持）, 并通过Reflect操作源代码内部的数据。\nreactive定义的数据：操作数据与读取数据：均不需要.value。\n当然，我之前就说过，ref可以定义对象或数组的，它只是内部自动调用了reactive来转换。")]),s._v(" "),n("h2",{attrs:{id:"对于vue3中的响应式-我们用到的proxy-当然-我们在vue2里面知道-proxy是什么-是代理-当然-并不是只用到了它-还有个window上的内置对象reflect-反射"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#对于vue3中的响应式-我们用到的proxy-当然-我们在vue2里面知道-proxy是什么-是代理-当然-并不是只用到了它-还有个window上的内置对象reflect-反射"}},[s._v("#")]),s._v(" 对于vue3中的响应式，我们用到的Proxy，当然，我们在vue2里面知道，Proxy是什么，是代理，当然，并不是只用到了它，还有个Window上的内置对象Reflect（反射）")]),s._v(" "),n("p",[s._v("通过Proxy（代理）: 拦截对象中任意属性的变化, 包括：属性值的读写、属性的添加、属性的删除等。\n通过Reflect（反射）: 对源对象的属性进行操作。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const p=new Proxy(data, {\n// 读取属性时调用\n    get (target, propName) {\n    \treturn Reflect.get(target, propName)\n    },\n//修改属性或添加属性时调用\n    set (target, propName, value) {\n    \treturn Reflect.set(target, propName, value)\n    },\n//删除属性时调用\n    deleteProperty (target, propName) {\n    \treturn Reflect.deleteProperty(target, propName)\n    }\n}) \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("h2",{attrs:{id:"setup-生命周期"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#setup-生命周期"}},[s._v("#")]),s._v(" setup 生命周期")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("beforeCreate===>Not needed*\ncreated=======>Not needed*\nbeforeMount ===>onBeforeMount\nmounted=======>onMounted\nbeforeUpdate===>onBeforeUpdate\nupdated =======>onUpdated\nbeforeUnmount ==>onBeforeUnmount\nunmounted =====>onUnmounted\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("h2",{attrs:{id:"toref与torefs"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#toref与torefs"}},[s._v("#")]),s._v(" toRef与toRefs")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<template>\n  <div class=\"home\">\n    <h1>当前姓名:{{names.name}}</h1>\n    <h1>当前年龄:{{names.age}}</h1>\n    <h1>当前薪水:{{names.job.salary}}K</h1>\n    <button @click=\"names.name+='!'\">点击加!</button>\n    <button @click=\"names.age++\">点击加一</button>\n    <button @click=\"names.job.salary++\">点击薪水加一</button>\n  </div>\n</template>\n\n<script>\nimport {reactive} from 'vue'\nexport default {\n  name: 'Home',\n  setup(){\n    let names=reactive({\n      name:'佩奇',\n      age:23,\n      job:{\n        salary:10\n      }\n    })\n    return {\n      names\n    }\n  }\n}\n<\/script>\n\n//是不是一直都是用到代码name.xx，可能你会说，那我就return的时候不这样写，改成这样\n\n// eg1: \n\nreturn {\n  name:names.name,\n  age:names.age,\n  salary:names.job.salary\n}\n\n// eg2:\n\n// 但是你要是在页面进行操作时就不是响应式了，为什么呢？那是因为你现在暴露出去的是简简单单的字符串，字符串会有响应式吗？肯定没有呀，但是你要是用到了toRef,那就是把name.xx变为响应式，然后操作它时会自动的去修改name里面的数据\n\nreturn {\n  name:toRef(names,'name'),\n  age:toRef(names,'age'),\n  salary:toRef(names.job,'salary')\n}\n\n// eg3: \n\n//但是有的人可能会说那我为什么不用ref去改变？可能大家会发现在页面里也是响应式的，但是我告诉你们，根本用到的不是names里面的数据，而是你单独定义出来的数据，所以要是这样写，无论怎么修改都不会修改到names里的数据\n\nreturn {\n  name:ref(names.name),\n  age:ref(names.age),\n  salary:ref(names.job.salary),\n}\n\ntoRefs\n\n聪明一点，toRefs与toRef有什么不同，加了个s,toRef是单个转化为响应式，那toRefs就是多个转化为响应式咯，这样的话就减少代码，不然要是有成千上万个，那你不是要当憨憨闷写吗？\n//（...是解构哈,看不懂就麻溜的alt+←)，当然它只会结构一层，深层里的代码还是要老实的写\n <h1>当前姓名:{{name}}</h1>\n <h1>当前薪水:{{job.salary}}K</h1>\nreturn {\n    ...toRefs(names)\n}\n\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br")])]),n("h2",{attrs:{id:"响应式判断"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#响应式判断"}},[s._v("#")]),s._v(" 响应式判断")]),s._v(" "),n("p",[s._v("下面是vue3给的一些判断方法\nisRef: 检查值是否为一个 ref 对象。\nisReactive：检查对象是否是由 reactive 创建的响应式代理。\nisReadonly: 检查对象是否是由 readonly 创建的只读代理。\nisProxy：检查对象是否是由 reactive 或 readonly 创建的 proxy。")]),s._v(" "),n("h2",{attrs:{id:"fragment"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#fragment"}},[s._v("#")]),s._v(" Fragment")]),s._v(" "),n("p",[s._v("对我而言这个更像是一种概念，它的意思就相当于创建页面时，给了一个虚拟根标签VNode，因为我们知道在vue2里面，我们是有根标签这个概念的，但是到来vue3，它是自动给你创建个虚拟根标签VNode（Fragment）,所以可以不要根标签。好处就是\n减少标签层级, 减小内存占用")]),s._v(" "),n("h2",{attrs:{id:"teleport"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#teleport"}},[s._v("#")]),s._v(" Teleport")]),s._v(" "),n("p",[s._v("teleport 提供了一种有趣的方法，允许我们控制在 DOM 中哪个父节点下渲染了 HTML，而不必求助于全局状态或将其拆分为两个组件。\n其实就是可以不考虑你写在什么位置，你可以定义teleport在任意标签里进行定位等（常见操作为模态框），除了body外，还可以写css选择器（id，class）")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('//id定位\n <teleport to="#app">\n            <div class="four">\n              <div class="five"></div>\n            </div>\n </teleport>\n//class定位\n <teleport to=".one">\n            <div class="four">\n              <div class="five"></div>\n            </div>\n </teleport>\n//示例\n<template>\n  <div class="one">\n    <h1>第一层</h1>\n    <div class="two">\n      <h1>第二层</h1>\n      <div class="three">\n        <h1>第三层</h1>\n        <teleport to="body">\n            <div class="four">\n              <div class="five"></div>\n            </div>\n        </teleport>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name:\'App\',\n  setup(){\n    return {}\n  }\n}\n<\/script>\n\n<style lang="less">\n.one{\n  width: 100%;\n  background-color: blue;\n  .two{\n    margin: 20px;\n    background-color: aqua;\n    .three{\n      margin: 20px;\n      background-color: aliceblue;\n    }\n  }\n}\n.four{\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  .five{\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%,-50%);\n    width: 300px;\n    height: 300px;\n    left: 50%;\n    background-color:#f60;\n  }\n}\n</style>\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br")])]),n("h2",{attrs:{id:"全局api的转移"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#全局api的转移"}},[s._v("#")]),s._v(" 全局API的转移")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("\n2.x 全局 API（Vue）\t 3.x 实例 API (app)\n\nVue.config.xxxx\t    app.config.xxxx\n\nVue.config.productionTip\t移除\n\nVue.component\t    app.component\nVue.directive\t    app.directive\nVue.mixin\t        app.mixin\nVue.use\t            app.use\nVue.prototype\t    app.config.globalProperties\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("ul",[n("li",[s._v("Vue2 中我们要往全局上挂载东西通常就是如下，然后在所有组件里都可以通过 this.xxx 获取到了")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("Vue.prototype.xxx = xxx\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("而 Vue3 中不能这么写了，换成了一个能被所有组件访问到的全局对象，就是上面说的全局实例的那个对象，比如在 main.js 中做全局注册")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// main.js\nimport { createApp } from 'vue'\nimport App from './App.vue'\nconst app = createApp(App)\n// 添加全局属性\napp.config.globalProperties.name = 'Clare'\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("ul",[n("li",[s._v("在其他组件中调用")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<script setup>\nimport { getCurrentInstance } from 'vue'\nconst { appContext } = getCurrentInstance()\n\nconst global = appContext.config.globalProperties\nconsole.log(global.name) // Clare\n<\/script>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h2",{attrs:{id:"router"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#router"}},[s._v("#")]),s._v(" router")]),s._v(" "),n("p",[s._v("可能大家会想到路由跳转的问题，可能大家会以为还是用this.$router.push来进行跳转，但是哦，在vue3中，这些东西是没有的，它是定义了一个vue-router然后引入的useRoute,useRouter 相当于vue2的 this.$route，this.$router,然后其他之前vue2的操作都可以进行")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("import {useRouter,useRoute} from \"vue-router\";\nsetup(){\n  const router= useRouter()\n  const route= useRoute()\n  function fn(){\n    this.$router.push('/about')\n  }\n  onMounted(()=>{\n    console.log(route.query.code)\n  })\n  return{\n    fn\n  }\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("h2",{attrs:{id:"解除绑定"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#解除绑定"}},[s._v("#")]),s._v(" 解除绑定")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("Vue2 中一般清除定时器、监听之类的操作有两种方法：")])]),s._v(" "),n("li",[n("p",[s._v("一是用$once 搭配 hook: BeforeDestroy 使用，这个 Vue3 不支持了")])]),s._v(" "),n("li",[n("p",[s._v("二是用 beforeDestroy / deactivated 这俩钩子，Vue3 中只是把钩子函数重命名了一下")])])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<script setup>\nimport { onBeforeUnmount, onDeactivated } from 'vue'\n\n// 组件卸载前，对应 Vue2 的 beforeDestroy\nonBeforeUnmount(() => {\n    clearTimeout(timer)\n    window.removeAddEventListener('...')\n})\n\n// 退出缓存组件，对应 Vue2 的 deactivated\nonDeactivated(() => {\n    clearTimeout(timer)\n    window.removeAddEventListener('...')\n})\n<\/script>\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);