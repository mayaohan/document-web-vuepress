(window.webpackJsonp=window.webpackJsonp||[]).push([[146],{461:function(e,a,s){"use strict";s.r(a);var n=s(1),l=Object(n.a)({},(function(){var e=this,a=e._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[a("strong",[e._v("原生脚手架开发痛点分析")])]),e._v(" "),a("ul",[a("li",[e._v("痛点一：重复操作\n"),a("ul",[a("li",[e._v("多 Package 本地 link")]),e._v(" "),a("li",[e._v("多 Package 依赖安装")]),e._v(" "),a("li",[e._v("多 Package 单元测试")]),e._v(" "),a("li",[e._v("多 Package 代码提交")]),e._v(" "),a("li",[e._v("多 Package 代码发布")]),e._v(" "),a("li",[e._v("痛点二：版本一致性")]),e._v(" "),a("li",[e._v("发布时版本一致性")]),e._v(" "),a("li",[e._v("发布后相互依赖版本升级")]),e._v(" "),a("li",[e._v("package 越多，管理复杂度越高")])])])]),e._v(" "),a("blockquote",[a("p",[e._v("package 越多，管理复杂度越高")])]),e._v(" "),a("p",[a("strong",[e._v("Lerna 是一个优化基于 git+npm 的多 package 项目的管理工具")])]),e._v(" "),a("p",[a("strong",[e._v("优势")])]),e._v(" "),a("ul",[a("li",[e._v("大幅减少重复操作")]),e._v(" "),a("li",[e._v("提升操作的标准化")])]),e._v(" "),a("blockquote",[a("p",[e._v("Lerna 是架构优化的产物，它揭示了一个架构真理：项目复杂度提升后，就需要对项目进行架构优化。架构优化的主要目标往往都是以效能为核心。")])]),e._v(" "),a("p",[a("strong",[e._v("官网")]),e._v("\n官网：https://lerna.js.org/")]),e._v(" "),a("p",[a("strong",[e._v("案例")]),e._v("\n使用 Lerna 管理的大型项目：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("babel: https://github.com/babel/babel\nvue-cli: https://github.com/vuejs/vue-cli\ncreate-react-app: https://github.com/facebook/create-react-app\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("p",[a("strong",[e._v("lerna 开发脚手架流程（划重点）")])]),e._v(" "),a("p",[a("img",{attrs:{src:"/document-web-vuepress/images/lerna.webp",alt:"lerna"}})]),e._v(" "),a("p",[a("strong",[e._v("基于 Lerna 创建项目")])]),e._v(" "),a("ul",[a("li",[e._v("安装 Lerna")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("npm install -g lerna\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("ul",[a("li",[e._v("创建项目")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("git init imooc-cli-test && cd imooc-cli-test\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("ul",[a("li",[e._v("初始化 Lerna 项目")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("lerna init\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("ul",[a("li",[e._v("创建 Package")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("lerna create @imooc-cli/core packages\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("ul",[a("li",[e._v("安装依赖")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("lerna add mocha packages/core --dev\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("ul",[a("li",[e._v("删除依赖")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("lerna clean\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("ul",[a("li",[e._v("安装依赖")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("lerna bootstrap\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("ul",[a("li",[e._v("执行单元测试")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("lerna run test\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("ul",[a("li",[e._v("执行特定包的单元测试")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("lerna run test @imooc-cli-test/core\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("ul",[a("li",[e._v("link 项目")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("lerna link\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("ul",[a("li",[e._v("发布项目")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("lerna publish\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[a("strong",[e._v("Lerna 使用细节（划重点）")])]),e._v(" "),a("ul",[a("li",[e._v("lerna init：\n会自动完成 git 初始化，但不会创建 .gitignore，这个必须要手动添加，否则会将 node_modules 目录都上传到 git，如果 node_modules 已经加入 git stage，可使用：")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("git reset HEAD <file>\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("执行 unstage 操作，如果文件已经被 git 监听到变更，可使用：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("git checkout -- <filename>\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("将变更作废，记得在执行操作之前将文件加入 .gitignore")]),e._v(" "),a("p",[a("strong",[e._v("lerna add：")])]),e._v(" "),a("ul",[a("li",[a("p",[e._v("第一个参数：添加 npm 包名")])]),e._v(" "),a("li",[a("p",[e._v("第二个参数：本地 package 的路径\n"),a("strong",[e._v("选项：")])])]),e._v(" "),a("li",[a("p",[e._v("--dev：将依赖安装到 devDependencies，不加时安装到 dependencies")])])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("lerna add <package> [loc] --dev\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[a("strong",[e._v("lerna link：")])]),e._v(" "),a("ul",[a("li",[e._v("如果未发布上线，需要手动将依赖添加到 package.json 再执行 lerna link")])]),e._v(" "),a("p",[a("strong",[e._v("lerna clean：")])]),e._v(" "),a("p",[e._v("只会删除 node_modules，不会删除 package.json 中的依赖")]),e._v(" "),a("p",[a("strong",[e._v("lerna exec 和 lerna run：")])]),e._v(" "),a("ul",[a("li",[e._v("--scope 属性后添加的是包名，而不是 package 的路径，这点和 lerna add 用法不同")])]),e._v(" "),a("p",[a("strong",[e._v("lerna publish：")])]),e._v(" "),a("ul",[a("li",[e._v("发布时会自动执行：git add package-lock.json，所以 package-lock.json 不要加入 .gitignore")]),e._v(" "),a("li",[e._v("先创建远程仓库，并且同步一次 master 分支")]),e._v(" "),a("li",[e._v("执行 lerna publish 前先完成 npm login")]),e._v(" "),a("li",[e._v("如果发布的 npm 包名为：@xxx/yyy 的格式，需要先在 npm 注册名为：xxx 的 organization，否则可能会提交不成功")]),e._v(" "),a("li",[e._v("发布到 npm group 时默认为 private，所以我们需要手动在 package.json 中添加如下配置：")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('"publishConfig": {\n  "access": "public"\n}\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])])])}),[],!1,null,null,null);a.default=l.exports}}]);