(window.webpackJsonp=window.webpackJsonp||[]).push([[132],{444:function(s,a,e){"use strict";e.r(a);var n=e(1),t=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"一、组件间通信的概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、组件间通信的概念"}},[s._v("#")]),s._v(" 一、组件间通信的概念")]),s._v(" "),a("p",[s._v("开始之前，我们把组件间通信这个词进行拆分")]),s._v(" "),a("ul",[a("li",[s._v("组件")]),s._v(" "),a("li",[s._v("通信\n都知道组件是vue最强大的功能之一，vue中每一个.vue我们都可以视之为一个组件通信指的是发送者通过某种媒体以某种格式来传递信息到收信者以达到某个目的。广义上，任何信息的交通都是通信组件间通信即指组件(.vue)通过某种方式来传递信息以达到某个目的举个栗子我们在使用UI框架中的table组件，可能会往table组件中传入某些数据，这个本质就形成了组件之间的通信")])]),s._v(" "),a("h2",{attrs:{id:"二、组件间通信解决了什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、组件间通信解决了什么"}},[s._v("#")]),s._v(" 二、组件间通信解决了什么")]),s._v(" "),a("p",[s._v("在古代，人们通过驿站、飞鸽传书、烽火报警、符号、语言、眼神、触碰等方式进行信息传递，到了今天，随着科技水平的飞速发展，通信基本完全利用有线或无线电完成，相继出现了有线电话、固定电话、无线电话、手机、互联网甚至视频电话等各种通信方式从上面这段话，我们可以看到通信的本质是信息同步，共享回到vue中，每个组件之间的都有独自的作用域，组件间的数据是无法共享的但实际开发工作中我们常常需要让组件之间共享数据，这也是组件通信的目的要让它们互相之间能进行通讯，这样才能构成一个有机的完整系统")]),s._v(" "),a("h2",{attrs:{id:"二、组件间通信的分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、组件间通信的分类"}},[s._v("#")]),s._v(" 二、组件间通信的分类")]),s._v(" "),a("p",[s._v("组件间通信的分类可以分成以下")]),s._v(" "),a("ul",[a("li",[s._v("父子组件之间的通信")]),s._v(" "),a("li",[s._v("兄弟组件之间的通信")]),s._v(" "),a("li",[s._v("祖孙与后代组件之间的通信")]),s._v(" "),a("li",[s._v("非关系组件间之间的通信")])]),s._v(" "),a("h2",{attrs:{id:"三、组件间通信的方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、组件间通信的方案"}},[s._v("#")]),s._v(" 三、组件间通信的方案")]),s._v(" "),a("p",[s._v("整理vue中8种常规的通信方案")]),s._v(" "),a("ul",[a("li",[s._v("通过 props 传递")]),s._v(" "),a("li",[s._v("通过 $emit 触发自定义事件")]),s._v(" "),a("li",[s._v("使用 ref")]),s._v(" "),a("li",[s._v("EventBus")]),s._v(" "),a("li",[s._v("$parent 或$root")]),s._v(" "),a("li",[s._v("attrs 与 listeners")]),s._v(" "),a("li",[s._v("Provide 与 Inject")]),s._v(" "),a("li",[s._v("Vuex")])]),s._v(" "),a("h2",{attrs:{id:"props传递数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#props传递数据"}},[s._v("#")]),s._v(" props传递数据")]),s._v(" "),a("blockquote",[a("p",[s._v("适用场景：")])]),s._v(" "),a("ul",[a("li",[s._v("父组件传递数据给子组件")]),s._v(" "),a("li",[s._v("子组件设置props属性，定义接收父组件传递过来的参数")]),s._v(" "),a("li",[s._v("父组件在使用子组件标签中通过字面量来传递值")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Children.vue\n\nprops:{  \n    // 字符串形式  \n name:String // 接收的类型参数  \n    // 对象形式  \n    age:{    \n        type:Number, // 接收的类型为数值  \n        defaule:18,  // 默认值为18  \n       require:true // age属性必须传递  \n    }  \n}  \n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('Father.vue组件\n\n<Children name="jack" age=18 />  \n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h2",{attrs:{id:"emit-触发自定义事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#emit-触发自定义事件"}},[s._v("#")]),s._v(" $emit 触发自定义事件")]),s._v(" "),a("p",[s._v("适用场景：")]),s._v(" "),a("ul",[a("li",[s._v("子组件传递数据给父组件")]),s._v(" "),a("li",[s._v("子组件通过$emit触发自定义事件，$emit第二个参数为传递的数值")]),s._v(" "),a("li",[s._v("父组件绑定监听器获取到子组件传递过来的参数")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Chilfen.vue\nthis.$emit('add', good)  \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('Father.vue\n\n<Children @add="cartAdd($event)" />  \n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h2",{attrs:{id:"ref"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ref"}},[s._v("#")]),s._v(" ref")]),s._v(" "),a("ul",[a("li",[s._v("父组件在使用子组件的时候设置ref")]),s._v(" "),a("li",[s._v("父组件通过设置子组件ref来获取数据")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('父组件\n\n<Children ref="foo" />  \nthis.$refs.foo  // 获取子组件实例，通过子组件实例我们就能拿到对应的数据  \n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h2",{attrs:{id:"eventbus"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eventbus"}},[s._v("#")]),s._v(" EventBus")]),s._v(" "),a("p",[s._v("使用场景：")]),s._v(" "),a("ul",[a("li",[s._v("兄弟组件传值")]),s._v(" "),a("li",[s._v("创建一个中央时间总线EventBus")]),s._v(" "),a("li",[s._v("兄弟组件通过$emit触发自定义事件，$emit第二个参数为传递的数值")]),s._v(" "),a("li",[s._v("另一个兄弟组件通过$on监听自定义事件")])]),s._v(" "),a("p",[a("strong",[s._v("Bus.js")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 创建一个中央时间总线类  \nclass Bus {  \n  constructor() {  \n    this.callbacks = {};   // 存放事件的名字  \n  }  \n  $on(name, fn) {  \n    this.callbacks[name] = this.callbacks[name] || [];  \n    this.callbacks[name].push(fn);  \n  }  \n  $emit(name, args) {  \n    if (this.callbacks[name]) {  \n      this.callbacks[name].forEach((cb) => cb(args));  \n    }  \n  }  \n}  \n// main.js  \nVue.prototype.$bus = new Bus() // 将$bus挂载到vue实例的原型上  \n// 另一种方式  \nVue.prototype.$bus = new Vue() // Vue已经实现了Bus的功能  \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("p",[s._v("Children1.vue")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("this.$bus.$emit('foo')  \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("Children2.vue")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("this.$bus.$on('foo', this.handle)  \n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("strong",[s._v("parent或root")])]),s._v(" "),a("ul",[a("li",[s._v("通过共同祖辈$parent或者$root搭建通信侨联\n兄弟组件")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("this.$parent.on('add',this.add)   \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("另一个兄弟组件\n"),a("code",[s._v("this.$parent.emit('add')")])]),s._v(" "),a("p",[a("strong",[s._v("attrs与listeners")]),s._v("\n适用场景：")]),s._v(" "),a("ul",[a("li",[s._v("祖先传递数据给子孙")]),s._v(" "),a("li",[s._v("设置批量向下传属性$attrs和 $listeners")]),s._v(" "),a("li",[s._v("包含了父级作用域中不作为 prop 被识别 (且获取) 的特性绑定 ( class 和 style 除外)。")]),s._v(" "),a("li",[s._v('可以通过 v-bind="$attrs" 传⼊内部组件')])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('   // child：并未在props中声明foo  \n    <p>{{$attrs.foo}}</p>  \n// parent  \n<HelloWorld foo="foo"/>  \n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('// 给Grandson隔代传值，communication/index.vue  \n<Child2 msg="lalala" @some-event="onSomeEvent"></Child2>  \n// Child2做展开  \n<Grandson v-bind="$attrs" v-on="$listeners"></Grandson>  \n\n// Grandson使⽤  \n<div @click="$emit(\'some-event\', \'msg from grandson\')">  \n  {{msg}}  \n</div>  \n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h2",{attrs:{id:"provide-与-inject"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#provide-与-inject"}},[s._v("#")]),s._v(" provide 与 inject")]),s._v(" "),a("ul",[a("li",[s._v("在祖先组件定义provide属性，返回传递的值")]),s._v(" "),a("li",[s._v("在后代组件通过inject接收组件传递过来的值")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("祖先组件\n\nprovide(){  \n    return {  \n        foo:'foo'  \n    }  \n}  \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("后代组件\n\ninject:['foo'] // 获取到祖先组件传递过来的值  \n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h2",{attrs:{id:"vuex"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vuex"}},[s._v("#")]),s._v(" vuex")]),s._v(" "),a("p",[s._v("适用场景:")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("复杂关系的组件数据传递")])]),s._v(" "),a("li",[a("p",[s._v("Vuex作用相当于一个用来存储共享变量的容器")])])]),s._v(" "),a("p",[a("strong",[s._v("state")]),s._v("用来存放共享变量的地方")]),s._v(" "),a("p",[a("strong",[s._v("getter")]),s._v("，可以增加一个getter派生状态，(相当于"),a("strong",[s._v("store")]),s._v("中的计算属性），用来获得共享变量的值")]),s._v(" "),a("p",[a("strong",[s._v("mutations")]),s._v("用来存放修改state的方法。")]),s._v(" "),a("p",[a("strong",[s._v("actions")]),s._v("也是用来存放修改state的方法，不过action是在mutations的基础上进行。常用来做一些异步操作")]),s._v(" "),a("p",[a("strong",[s._v("小结")])]),s._v(" "),a("ul",[a("li",[s._v("父子关系的组件数据传递选择 "),a("code",[s._v("props")]),s._v("  与 "),a("code",[s._v("$emit")]),s._v("进行传递，也可选择"),a("code",[s._v("ref")])]),s._v(" "),a("li",[s._v("兄弟关系的组件数据传递可选择 "),a("code",[s._v("$bus")]),s._v("，其次可以选择"),a("code",[s._v("$parent")]),s._v("进行传递")]),s._v(" "),a("li",[s._v("祖先与后代组件数据传递可选择"),a("code",[s._v("attrs")]),s._v("与listeners或者 "),a("code",[s._v("Provide")]),s._v("与 "),a("code",[s._v("Inject")])]),s._v(" "),a("li",[s._v("复杂关系的组件数据传递可以通过"),a("code",[s._v("vuex")]),s._v("存放共享的变量")])])])}),[],!1,null,null,null);a.default=t.exports}}]);