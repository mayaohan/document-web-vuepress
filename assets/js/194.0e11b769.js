(window.webpackJsonp=window.webpackJsonp||[]).push([[194],{509:function(v,_,t){"use strict";t.r(_);var e=t(1),i=Object(e.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"git是什么"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#git是什么"}},[v._v("#")]),v._v(" git是什么")]),v._v(" "),_("blockquote",[_("p",[_("code",[v._v("git")]),v._v("，是一个分布式版本控制软件，最初目的是为更好地管理Linux内核开发而设计分布式版本控制系统的客户端并不只提取最新版本的文件快照，而是把代码仓库完整地镜像下来。这么一来，任何一处协同工作用的服务器发生故障，事后都可以用任何一个镜像出来的本地仓库恢复")])]),v._v(" "),_("p",[_("img",{attrs:{src:"/learing_record/images/git01.webp",alt:"designPatterns"}})]),v._v(" "),_("p",[v._v("项目开始，只有一个原始版仓库，别的机器可以"),_("code",[v._v("clone")]),v._v("这个原始版本库，那么所有"),_("code",[v._v("clone")]),v._v("的机器，它们的版本库其实都是一样的，并没有主次之分")]),v._v(" "),_("p",[v._v("所以在实现团队协作的时候，只要有一台电脑充当服务器的角色，其他每个人都从这个“服务器”仓库"),_("code",[v._v("clone")]),v._v("一份到自己的电脑上，并且各自把各自的提交推送到服务器仓库里，也从服务器仓库中拉取别人的提交")]),v._v(" "),_("p",[_("code",[v._v("github")]),v._v("实际就可以充当这个服务器角色，其是一个开源协作社区，提供"),_("code",[v._v("Git")]),v._v("仓库托管服务，既可以让别人参与你的开源项目，也可以参与别人的开源项目")]),v._v(" "),_("h2",{attrs:{id:"工作原理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#工作原理"}},[v._v("#")]),v._v(" 工作原理")]),v._v(" "),_("p",[v._v("当我们通过"),_("code",[v._v("git init")]),v._v("创建或者"),_("code",[v._v("git clone")]),v._v("一个项目的时候，项目目录会隐藏一个"),_("code",[v._v(".git")]),v._v("子目录，其作用是用来跟踪管理版本库的")]),v._v(" "),_("p",[_("strong",[v._v("Git")]),v._v(" 中所有数据在存储前都计算校验和，然后以校验和来引用，所以在我们修改或者删除文件的时候，git能够知道")]),v._v(" "),_("p",[_("strong",[v._v("Git")]),v._v(" 用以计算校验和的机制叫做 "),_("code",[v._v("SHA-1")]),v._v(" 散列（"),_("code",[v._v("hash")]),v._v("，哈希）， 这是一个由 40 个十六进制字符（0-9 和 a-f）组成字符串，基于 "),_("code",[v._v("Git")]),v._v(" 中文件的内容或目录结构计算出来，如下：")]),v._v(" "),_("div",{staticClass:"language- line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[v._v("24b9da6552252987aa493b52f8696cd6d3b00373\n")])]),v._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[v._v("1")]),_("br")])]),_("p",[v._v("当我们修改文件的时候，"),_("code",[v._v("git")]),v._v("就会修改文件的状态，可以通过"),_("code",[v._v("git status")]),v._v("进行查询，状态情况如下：")]),v._v(" "),_("ul",[_("li",[v._v("已修改（modified）：表示修改了文件，但还没保存到数据库中。")]),v._v(" "),_("li",[v._v("已暂存（staged）：表示对一个已修改文件的当前版本做了标记，使之包含在下次提交的快照中。")]),v._v(" "),_("li",[v._v("已提交（committed）：表示数据已经安全的保存在本地数据库中。")])]),v._v(" "),_("p",[v._v("文件状态对应的，不同状态的文件在Git中处于不同的工作区域，主要分成了四部分：")]),v._v(" "),_("ul",[_("li",[v._v("工作区：相当于本地写代码的区域，如 "),_("code",[v._v("git clone")]),v._v(" 一个项目到本地，相当于本地克隆了远程仓库项目的一个副本")]),v._v(" "),_("li",[v._v("暂存区：暂存区是一个文件，保存了下次将提交的文件列表信息，一般在 "),_("code",[v._v("Git")]),v._v("仓库目录中")]),v._v(" "),_("li",[v._v("本地仓库：提交更新，找到暂存区域的文件，将快照永久性存储到 "),_("code",[v._v("Git")]),v._v(" 本地仓库")]),v._v(" "),_("li",[v._v("远程仓库：远程的仓库，如 "),_("code",[v._v("github")])])]),v._v(" "),_("p",[_("img",{attrs:{src:"/learing_record/images/git02.webp",alt:"designPatterns"}})]),v._v(" "),_("h2",{attrs:{id:"命令"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#命令"}},[v._v("#")]),v._v(" 命令")]),v._v(" "),_("p",[v._v("从上图可以看到，git日常简单的使用就只有上图6个命令：")]),v._v(" "),_("ul",[_("li",[v._v("add")]),v._v(" "),_("li",[v._v("commit")]),v._v(" "),_("li",[v._v("push")]),v._v(" "),_("li",[v._v("pull")]),v._v(" "),_("li",[v._v("clone")]),v._v(" "),_("li",[v._v("checkout\n但实际上还有很多命令，如果想要熟练使用，还有60个多命令，通过这些命令的配合使用，能够提高个人工作效率和团队协助能力")])])])}),[],!1,null,null,null);_.default=i.exports}}]);